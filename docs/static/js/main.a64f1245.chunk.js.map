{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","image","id","title","images","downsized_still","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","imgs","useFetchGifs","img","GifExpertApp","c","ReactDOM","render","document","getElementById"],"mappings":"qLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCFP,SAASQ,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAAgB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAezC,OACI,mCACA,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA+BO,OAC7CN,EAAc,MAKlB,UACI,8CACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,mCCMhBG,EAfF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNC,EADM,iDAC0CC,UAAUH,GADpD,+DAEOI,MAAMF,GAFb,cAENG,EAFM,gBAGSA,EAAKC,OAHd,uBAGLC,EAHK,EAGLA,KAEDC,EAAQD,EAAKE,KAAK,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbV,IAAKQ,EAAMG,OAAOC,gBAAgBZ,QAT9B,kBAYLM,GAZK,4CAAH,sDCEE,SAASO,EAAT,GAAuC,EAAjBJ,GAAkB,IAAdC,EAAa,EAAbA,MAAOV,EAAM,EAANA,IAE5C,OACI,sBAAKc,UAAU,yCAAf,UACA,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,OCDG,SAASO,EAAT,GAA8B,IAAZnB,EAAW,EAAXA,SAAW,ECHhB,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAW,WAEHxB,EAAQC,GACPtB,MAAK,SAAA8C,GAEFF,EAAS,CACLf,KAAKiB,EACLJ,SAAS,SAKtB,CAACpB,IAEGqB,EDbwBI,CAAazB,GAAhCa,EAJ4B,EAIjCN,KAAaa,EAJoB,EAIpBA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACiB,GACR,OAAO,cAACX,EAAD,eAA8BW,GAAZA,EAAIf,YEflC,SAASgB,IAAgB,IAAD,EAECzC,mBAAS,CAAC,WAFX,mBAE5BQ,EAF4B,KAEhBT,EAFgB,KAGnC,OAEI,qCACI,kFACA,uBACA,cAACD,EAAD,CACIC,cAAiBA,IAErB,uBACA,6BAEQS,EAAWe,KAAK,SAACmB,GAAD,OAEhB,cAACT,EAAD,CAEInB,SAAU4B,GADLA,W,MCb7BC,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.a64f1245.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState} from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport function AddCategory({setCategories}) {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories((categories) => [inputValue,...categories])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <h5>Add Category</h5>\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=1N6n49hyUI351ziTsLU21cAdDwfXnaNU`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json();\r\n\r\n    const gifts = data.map( image => {\r\n        return {\r\n            id: image.id,\r\n            title: image.title,\r\n            url: image.images.downsized_still.url\r\n        }\r\n    })\r\n    return(gifts)\r\n}\r\n\r\nexport default getGifs","import React from 'react'\r\n\r\nexport default function GifGridItem({id, title, url}) {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n        <img src={url} alt={title} />\r\n        <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, {useState, useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import getGifs from '../helpers/getGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nexport default function GifGrid({category}) {\r\n\r\n    // const [images, setImages] = useState([])\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n        { loading && <p className='animate__animated animate__flash'>loading...</p>}\r\n        <div className='card-grid'>\r\n            {\r\n                images.map((img) => {\r\n                    return <GifGridItem key={img.id} {...img}></GifGridItem>\r\n                })\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( ()=> {\r\n\r\n            getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n\r\n                })\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nexport default function GifExpertApp() {\r\n\r\n    const [categories, setCategories] = useState(['homero'])\r\n    return (\r\n\r\n        <>\r\n            <h2>GifExpertApp ! - Curso de React Fernando Herrera</h2>\r\n            <hr/>\r\n            <AddCategory \r\n                setCategories = {setCategories}\r\n            />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( (c) =>  (\r\n\r\n                    <GifGrid \r\n                        key={c}\r\n                        category={c}\r\n                    /> \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from './GifExpertApp'\n\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}